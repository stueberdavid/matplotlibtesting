Meeting 02.05.24

über die Zeit betrachten, mit der Zeitspalte frame.time_epoche
y = Zeit, x = nicht alle Pakete als Summe, sondern Pakete bzw. Byte pro Sec.
Videostreams in verschiedenen Qualitäten anfordern und vergleichen in einem gemeinsamen Plot
wie viel von der frame.len nur header, wie viel sind Payload?
Wie viel % der Pakete haben tatsächlich einen Payload und welche keinen (z.B. Acks)
Welche Flows gibt es? welche ist der Mainflow (nach Größe der pakete (normal) und nach paketanzahl)
Flow = Datenstrom (Welche Daten werden zwischen wem ausgetauscht, z.B. zwischen mir und YT)


Meeting 22.05.24

Pandas Dataframe googlen
performence verbessern

vorher eine Liste einlegen, weil Append gefährlich ist für die Performance
in eine Array die Anzahl der Pakete von allen AllNetworkTrafic (die erste Datei)
sortieren nach größe
plot von sortierten Liste

für Performance keine for-Schleife verwenden!
ChatGPT um hilfe fragen, um for-Schleifen zu vermeiden





def plt_normal(dateiname):
    versuch = pd.read_csv(dateiname, usecols=['ip.dst', 'frame.len'])

    daten = versuch[versuch['ip.dst'] == '172.16.31.14']
    daten_list = daten['frame.len'].to_list()
    daten_anzahl = np.arange(len(daten_list))

    return daten_list, daten_anzahl, 'Pakete über die Zeit', 'Größe der eingehenden Pakete'